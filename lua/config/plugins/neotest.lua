return {}
-- return {
--   "nvim-neotest/neotest",
--   lazy = true,
--   cmd = {
--     "Neotest",
--   },
--   dependencies = {
--     "nvim-neotest/nvim-nio",
--     "nvim-lua/plenary.nvim",
--     "antoinemadec/FixCursorHold.nvim",
--     "nvim-treesitter/nvim-treesitter",
--     "marilari88/neotest-vitest",
--     'nvim-neotest/neotest-jest',
--   },
--   keys = function()
--     local keys = {
--       {
--         "<leader>ntp",
--         function()
--           require('neotest').output_panel.toggle()
--         end,
--         desc = "Neotest Open Output Panel",
--       },
--       {
--         "<leader>nts",
--         function()
--           require('neotest').summary.toggle()
--         end,
--         desc = "Neotest Open Summary",
--       },
--       {
--         "<leader>ntc",
--         function()
--           local neotest = require('neotest')
--           neotest.output.close()
--           neotest.summary.close()
--           neotest.output_panel.close()
--         end,
--         desc = "Neotest Close Windows",
--       },
--       {
--         "<leader>tt",
--         function ()
--           require('neotest').summary.toggle()
--         end,
--         desc = "Neotest Open Summary",
--       },
--       {
--         "<leader>tdv",
--         function ()
--           local neotest = require('neotest')
--           neotest.summary.open()
--           neotest.run.run({
--             vitestCommand = 'npm test -- ',
--             jestCommand = 'node --inspect-brk node_modules/.bin/jest --runInBand',
--             strategy = 'dap',
--           })
--         end,
--         desc = "Debug Test",
--       },
--     }
--     return keys
--   end,
--   opts = function(_, opts)
--     if not opts then
--       opts = {
--         discovery = {
--           enabled = false,
--           concurrent = 0,
--         },
--       }
--     end
--     if not opts.adapters then
--       opts.adapters = {}
--     end
--     table.insert(opts.adapters, require('neotest-vitest')({
--       -- Filter directories when searching for test files. Useful in large projects (see Filter directories notes).
--       filter_dir = function(name)
--         return name ~= "node_modules"
--       end,
--     }))
--     table.insert(opts.adapters, require('neotest-jest')({
--       jestCommand = "node --inspect-brk=9229 node_modules/.bin/jest --runInBand",
--       jestConfigFile = "custom.jest.config.ts",
--       env = { CI = true },
--       cwd = function()
--         return vim.fn.getcwd()
--       end,
--       dap = {
--         type = 'pwa-node',
--         request = 'launch',
--         port = 9229,
--         name = 'Debug Jest Tests',
--         args = {
--           '--no-cache',
--           '--runInBand',
--         },
--         console = 'integratedTerminal',
--         internalConsoleOptions = "neverOpen",
--         rootPath = "${workspaceFolder}",
--         sourceMaps = true,
--         skipFiles = { '<node_internals>/**/*.js' },
--       }
--     }))
--     return opts
--   end,
-- }
